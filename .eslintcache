[{"D:\\Work\\Eisenhower\\eisenhower\\src\\index.js":"1","D:\\Work\\Eisenhower\\eisenhower\\src\\App.js":"2","D:\\Work\\Eisenhower\\eisenhower\\src\\reportWebVitals.js":"3","D:\\Work\\Eisenhower\\eisenhower\\src\\view\\task-box\\TaskBox.js":"4","D:\\Work\\Eisenhower\\eisenhower\\src\\view\\task-box\\TaskBoxHandlers.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":886,"mtime":1610697927425,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":5352,"mtime":1610701480554,"results":"10","hashOfConfig":"7"},{"size":1073,"mtime":1610701421618,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"r7zf6z",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"D:\\Work\\Eisenhower\\eisenhower\\src\\index.js",[],["27","28"],"D:\\Work\\Eisenhower\\eisenhower\\src\\App.js",["29","30","31","32"],"import logo from './logo.svg';\nimport './App.css';\nimport { Header, RedTaskBox, GreenTaskBox, YellowTaskBox, GrayTaskBox } from './view/task-box/TaskBox'\nimport ReactSortable from 'react-sortablejs'\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <div className=\"container\">\n        <div className=\"row\" style={{ margin: \"20px\" }}>\n          <RedTaskBox></RedTaskBox>\n          <YellowTaskBox></YellowTaskBox>\n        </div>\n        <div className=\"row\" style={{ margin: \"20px\" }}>\n          <GreenTaskBox></GreenTaskBox>\n          <GrayTaskBox></GrayTaskBox>\n        </div>\n      </div>\n      <footer style={{margin:\"20px\"}}>\n        <p style={{fontSize:14+\"px\",textAlign: \"center\"}}>Â© Ikshavaku labs</p>\n    </footer>\n    </div>\n\n  );\n}\nfunction onEnter(event) {\n  console.log(event);\n  if (event.charCode == 13) {\n        return true;\n  }\n}\nexport default App;\n","D:\\Work\\Eisenhower\\eisenhower\\src\\reportWebVitals.js",[],"D:\\Work\\Eisenhower\\eisenhower\\src\\view\\task-box\\TaskBox.js",["33"],"import React from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport {updateList,removeItem,loadCache} from './TaskBoxHandlers'\r\n\r\nexport const grayStyledBox = { padding: \"20px\", background: \"#8f8b8b\", margin: \"10px\" };\r\nexport const redStyledBox = { padding: \"20px\", background: \"#f8a1a1\", margin: \"10px\" };\r\nexport const yellowStyledBox = { padding: \"20px\", background: \"#f8e99a\", margin: \"10px\" };\r\nexport const greenStyledBox = { padding: \"20px\", background: \"#c8f569\", margin: \"10px\" };\r\n\r\nexport class RedTaskBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let cachedList = [];\r\n    cachedList = loadCache(cachedList, \"red\");\r\n    this.state = { list: cachedList, type: \"red\" };\r\n    this.updateList = updateList.bind(this);\r\n    this.removeItem = removeItem.bind(this);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\" style={redStyledBox}>\r\n        <p className=\"lead text-danger\">Critical - Important</p><input type=\"text\" id=\"ci\" className=\"form-control\" placeholder=\"Things you need to do\" onKeyPress={this.updateList} />\r\n        <ReactSortable tag=\"ol\"\r\n          list={this.state.list}\r\n          setList={(newState) => this.setState({ list: newState })}>\r\n          {this.state.list.map((item, index) => (\r\n            <li className=\"task-item\" data-index={index} key={item.id}>{item.task}\r\n              <DeleteButton index={index} onDelete={this.removeItem} />\r\n            </li>\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport class YellowTaskBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let cachedList = [];\r\n    cachedList = loadCache(cachedList, \"yellow\");\r\n    this.state = { list: cachedList, type: \"yellow\", showNotes: false };\r\n    this.updateList = updateList.bind(this);\r\n    this.removeItem = removeItem.bind(this);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col\" style={yellowStyledBox}>\r\n        <p className=\"lead text-warning\">Critical - Not Important</p><input type=\"text\" id=\"cnimp\" className=\"form-control\" placeholder=\"Things you can delegate\" onKeyPress={this.updateList} />\r\n        <ReactSortable tag=\"ol\"\r\n          list={this.state.list}\r\n          setList={(newState) => this.setState({ list: newState })}>\r\n          {this.state.list.map((item, index) => (\r\n            <li className=\"task-item\" key={item.id}>{item.task}\r\n              <DeleteButton index={index} onDelete={this.removeItem} />\r\n            </li>\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport class GreenTaskBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let cachedList = [];\r\n    cachedList = loadCache(cachedList, \"green\");\r\n    this.state = { list: cachedList, type: \"green\", showNotes: false };\r\n    console.log(this.state);\r\n    this.updateList = updateList.bind(this);\r\n    this.removeItem = removeItem.bind(this);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col\" style={greenStyledBox}>\r\n        <p className=\"lead text-success\">Not Critical - Important</p><input type=\"text\" id=\"ncimp\" className=\"form-control\" placeholder=\"Things you want to do\" onKeyPress={this.updateList} />\r\n        <ReactSortable tag=\"ol\"\r\n          list={this.state.list}\r\n          setList={(newState) => this.setState({ list: newState })}>\r\n          {this.state.list.map((item, index) => (\r\n            <li className=\"task-item\" key={item.id}>{item.task}\r\n              <DeleteButton index={index} onDelete={this.removeItem} />\r\n            </li>\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport class GrayTaskBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let cachedList = [];\r\n    cachedList = loadCache(cachedList, \"gray\");\r\n    this.state = { list: cachedList, type: \"gray\", showNotes: false };\r\n    this.updateList = updateList.bind(this);\r\n    this.removeItem = removeItem.bind(this);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col\" style={grayStyledBox}>\r\n        <p className=\"lead text-light\">Not Critical - Not Important</p><input type=\"text\" className=\"form-control\" placeholder=\"Things you want to do\" onKeyPress={this.updateList} />\r\n        <ReactSortable tag=\"ol\"\r\n          list={this.state.list}\r\n          setList={(newState) => this.setState({ list: newState })}>\r\n          {this.state.list.map((item, index) => (\r\n            <li className=\"task-item\" key={item.id}>{item.task}\r\n              <DeleteButton index={index} onDelete={this.removeItem} />\r\n            </li>\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport const Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-light navbar-expand-md bg-primary\">\r\n      <div className=\"container-fluid\"><i className=\"fa fa-play-circle-o fa-3x\" style={{ color: \"rgb(240,242,245)\", margin: \"5px;\" }}></i><a className=\"navbar-brand text-capitalize text-light\" href=\"#\" style={{ fontSize: \"28px\" }}>EISENHOWER MATRIX</a>\r\n        <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n          <ul className=\"nav navbar-nav\"></ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport const DeleteButton = (props) => {\r\n  return (\r\n    <i className=\"fa fa-remove float-right\" onClick={() => { props.onDelete(props.index) }}></i>\r\n  )\r\n}\r\n\r\n\r\n","D:\\Work\\Eisenhower\\eisenhower\\src\\view\\task-box\\TaskBoxHandlers.js",["34","35"],"export function updateList(event) {\r\n    if (event.charCode == 13) {\r\n      let newItem = { id: this.state.list.length + 1, task: event.target.value }\r\n      const updatedList = { list: [...this.state.list, newItem] };\r\n      // this.state.list.push(event.target.value);\r\n      this.setState(updatedList);\r\n      updateLocalStorage(this,updatedList.list);\r\n      event.target.value = '';\r\n    }\r\n  }\r\n\r\n  export function removeItem(index) {\r\n    this.state.list.splice(index, 1);\r\n    const updatedList = { list: this.state.list };\r\n    this.setState(updatedList);\r\n    this.setState({ showNotes: false });\r\n    updateLocalStorage(this,updatedList.list);\r\n    if (this.state.selected == index) {\r\n      this.setState({ showNotes: false })\r\n    }\r\n  }\r\n\r\n  export function updateLocalStorage(box,updatedList) {\r\n    localStorage.setItem(box.state.type, JSON.stringify(updatedList));\r\n  }\r\n  export function loadCache(cachedList, color) {\r\n    if (localStorage.getItem(color)) {\r\n      cachedList = JSON.parse(localStorage.getItem(color));\r\n    }\r\n    return cachedList;\r\n  }",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":21},{"ruleId":"42","severity":1,"message":"47","line":27,"column":10,"nodeType":"44","messageId":"45","endLine":27,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":29,"column":22,"nodeType":"50","messageId":"51","endLine":29,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":126,"column":139,"nodeType":"54","endLine":126,"endColumn":232},{"ruleId":"48","severity":1,"message":"49","line":2,"column":24,"nodeType":"50","messageId":"51","endLine":2,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":18,"column":29,"nodeType":"50","messageId":"51","endLine":18,"endColumn":31},{"ruleId":"38","replacedBy":"55"},{"ruleId":"40","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactSortable' is defined but never used.","'onEnter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["57"],["58"],"no-global-assign","no-unsafe-negation"]